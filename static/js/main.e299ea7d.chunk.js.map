{"version":3,"sources":["img/3d-pong.png","img/three.png","img/conway.png","img/excursion.png","conway/conwayRenderer.js","components/Home/Home.js","components/Projects/Nav/Nav.js","background/backgroundManager.js","components/Projects/ThreeBackground/ThreeBackground.js","background/backgroundRender.js","components/Projects/Main/Main.js","game/GameManager.js","components/Projects/GameScreen/GameScreen.js","game/gameRender.js","components/Projects/Map/Map.js","components/Projects/ConwayScreen/ConwayScreen.js","components/App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","inputKey","Home","react_default","a","createElement","className","src","alt","Link","to","planet","pong","conway","href","excursion","Component","NavBar","background_backgroundManager","canvas","scene","THREE","circle","skelet","particle","add","fieldWidth","window","innerWidth","fieldHeight","innerHeight","cameraAspect","camera","position","z","lights","set","renderer","alpha","autoClear","setClearColor","setPixelRatio","devicePixelRatio","setSize","OctahedronBufferGeometry","octahedronArray","geom","geom2","color","flatShading","scale","x","y","planet2","wireframe","side","i","octahedron","Math","random","rotation","PI","push","forEach","element","onWindowResize","width","height","aspect","updateProjectionMatrix","update","render","drawScene","ThreeBackground","canvasComponent","backgroundManager","BackgroundManager","resizeCanvas","style","offsetWidth","offsetHeight","onresize","time","requestAnimationFrame","backgroundRender","document","getElementById","id","Nav_Nav","Projects_ThreeBackground_ThreeBackground","GameManager","background","gameStarted","lookAt","load","response","console","log","ballGeometry","ballMaterial","ball","boardWidth","boardHeight","boardMaterial","boardGeometry","board","pointLight","intensity","distance","spotLight","castShadow","paddleGeometry","paddle1Material","paddle2Material","paddle1","paddle2","paddle1UpperRange","paddleHeight","paddle1LowerRange","paddleDepth","pillarGeometry","pillarMaterial","pillar1","pillar2","pillar3","pillar4","pillar5","pillar6","tableGeometry","tableMaterial","table","floorGeometry","floorMaterial","floor","downCounter","scoreKeeper","scoreContext","getContext","player2Score","countDownBool","scoreBoardGeometry","scoreTexture","minFilter","scoreBoardMaterial","map","scoreBoard","children","ballXDirection","ballYDirection","ballDelayStart","font","fillStyle","fillRect","textAlign","textBaseline","fillText","concat","needsUpdate","setTimeout","GameScreen","gameManager","addEventListener","event","keyCode","undefined","gameRender","Map","Mapbox","container","this","mapContainer","center","zoom","pitch","bearing","on","labelLayerId","layers","getStyle","length","type","layout","addLayer","source","source-layer","filter","minzoom","paint","fill-extrusion-color","fill-extrusion-height","fill-extrusion-base","fill-extrusion-opacity","remove","_this","top","bottom","zIndex","ref","el","conwayRenderer","Model","size","field","j","createField","gamePaused","setInterval","newList","rowCount","sqrt","newField","gridInfo","newY","newX","newValue","updateBoard","neighborList","newTurnList","list","value","neighborCount","Object","toConsumableArray","lifeOrDeathLogic","inputField","fieldSize","row","indexOfRow","grid","indexOfGrid","getNeighbor","canvasContext","mouseXPos","clientX","mouseYPos","clientY","boardSize","rowIndex","gridIndex","gridcolor","componentDidMount","class","App","props","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","HashRouter","Route","path","exact","component","Main","Conway","Boolean","location","hostname","match","ReactDOM","components_App","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.e299ea7d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/3d-pong.5de2ef93.png\";","module.exports = __webpack_public_path__ + \"static/media/three.1d22a770.png\";","module.exports = __webpack_public_path__ + \"static/media/conway.aaaed6f6.png\";","module.exports = __webpack_public_path__ + \"static/media/excursion.67922bf3.png\";","//this function is the starting function to generate a field\n\nconst createField = size => {\n  let field = [];\n  for (let i = 0; i < size; i++) {\n    field[i] = [];\n\n    for (let j = 0; j < size; j++) {\n      field[i][j] = 0;\n    }\n  }\n  return field;\n};\n\n//this function determines the neighbors of each grid\n\nconst getNeighbor = inputField => {\n  let fieldSize = inputField.length;\n  let neighborList = [];\n  inputField.forEach((row, indexOfRow) => {\n    row.forEach((grid, indexOfGrid) => {\n      //this checks the neighbor of the existing grid\n      let neighborCount = 0;\n\n      //this checks top left corner\n      if (indexOfRow - 1 >= 0 && indexOfGrid - 1 >= 0) {\n        if (inputField[indexOfRow - 1][indexOfGrid - 1] === 1) {\n          neighborCount += 1;\n        }\n      }\n      //this checks top neighbor\n      if (indexOfRow - 1 >= 0) {\n        if (inputField[indexOfRow - 1][indexOfGrid] === 1) {\n          neighborCount += 1;\n        }\n      }\n      //this checks top right corner\n      if (indexOfRow - 1 >= 0 && indexOfGrid + 1 < fieldSize) {\n        if (inputField[indexOfRow - 1][indexOfGrid + 1] === 1) {\n          neighborCount += 1;\n        }\n      }\n      //this checks left neighbor\n      if (indexOfGrid - 1 >= 0) {\n        if (inputField[indexOfRow][indexOfGrid - 1] === 1) {\n          neighborCount += 1;\n        }\n      }\n      //this checks right neighbor\n      if (indexOfGrid + 1 < fieldSize) {\n        if (inputField[indexOfRow][indexOfGrid + 1] === 1) {\n          neighborCount += 1;\n        }\n      }\n\n      //this checks bottom left corner\n      if (indexOfRow + 1 < fieldSize && indexOfGrid - 1 >= 0) {\n        if (inputField[indexOfRow + 1][indexOfGrid - 1] === 1) {\n          neighborCount += 1;\n        }\n      }\n\n      //this checks bottom neighbor\n      if (indexOfRow + 1 < fieldSize) {\n        if (inputField[indexOfRow + 1][indexOfGrid] === 1) {\n          neighborCount += 1;\n        }\n      }\n\n      //this checks bottom right corner\n      if (indexOfRow + 1 < fieldSize && indexOfGrid + 1 < fieldSize) {\n        if (inputField[indexOfRow + 1][indexOfGrid + 1] === 1) {\n          neighborCount += 1;\n        }\n      }\n\n      neighborList = [\n        ...neighborList,\n        {\n          y: indexOfRow,\n          x: indexOfGrid,\n          value: grid,\n          neighborCount: neighborCount\n        }\n      ];\n    });\n  });\n  //returns an array of objects that holds the coordinates and the new values to be updated\n  return neighborList;\n};\n\n//this function determines the life or death of the organism based on neighbor list\n\nconst lifeOrDeathLogic = neighborList => {\n  let newTurnList = [];\n\n  neighborList.forEach(list => {\n    //this is the logic for determening life or death\n\n    //this is when organisms die of underpopulation\n    if (list.value === 1 && list.neighborCount < 2) {\n      newTurnList = [\n        ...newTurnList,\n        { newY: list.y, newX: list.x, newValue: 0 }\n      ];\n    }\n    //this is when organisms die of overpopulation\n    if (list.value === 1 && list.neighborCount > 3) {\n      newTurnList = [\n        ...newTurnList,\n        { newY: list.y, newX: list.x, newValue: 0 }\n      ];\n    }\n    //this is when organisms surive\n    if (\n      list.value === 1 &&\n      list.neighborCount >= 2 &&\n      list.neighborCount <= 3\n    ) {\n      newTurnList = [\n        ...newTurnList,\n        { newY: list.y, newX: list.x, newValue: 1 }\n      ];\n    }\n\n    //this is when organism gets born under the right condition\n    if (list.value === 0 && list.neighborCount === 3) {\n      newTurnList = [\n        ...newTurnList,\n        { newY: list.y, newX: list.x, newValue: 1 }\n      ];\n    }\n\n    //this is to represent the empty field\n    if (list.value === 0 && list.neighborCount !== 3) {\n      newTurnList = [\n        ...newTurnList,\n        { newY: list.y, newX: list.x, newValue: 0 }\n      ];\n    }\n  });\n\n  return newTurnList;\n};\n\n//this function generate a new field based on previous input\nconst updateBoard = newList => {\n  let rowCount = Math.sqrt(newList.length);\n  let newField = [];\n  for (let i = 0; i < rowCount; i++) {\n    newField[i] = [];\n    for (let j = 0; j < rowCount; j++) {\n      newField[i][j] = null;\n    }\n  }\n  newList.forEach(gridInfo => {\n    newField[gridInfo.newY][gridInfo.newX] = gridInfo.newValue;\n  });\n\n  return newField;\n};\n\nlet inputKey;\n\nwindow.addEventListener('keydown', event => {\n  inputKey = event.keyCode;\n});\n\nwindow.addEventListener('keyup', event => {\n  inputKey = undefined;\n});\n\nexport default canvasComponent => {\n  let boardSize = 40;\n  let board = createField(boardSize);\n  const Model = {\n    board: board,\n    gamePaused: true\n  };\n\n  setInterval(() => {\n    if (!Model.gamePaused) {\n      Model.board = updateBoard(lifeOrDeathLogic(getNeighbor(Model.board)));\n    }\n  }, 500);\n\n  const bindEventListeners = () => {\n    window.onresize = resizeCanvas;\n    resizeCanvas();\n  };\n\n  const resizeCanvas = () => {\n    canvasComponent.style.width = `60vw`;\n    canvasComponent.style.height = `100vh`;\n    canvasComponent.width = canvasComponent.offsetWidth;\n    canvasComponent.height = canvasComponent.offsetHeight;\n  };\n\n  let canvasContext = canvasComponent.getContext('2d');\n\n  canvasComponent.addEventListener('click', event => {\n    let mouseXPos = Math.floor((event.clientX - 11.5) / 11.5);\n    let mouseYPos = Math.floor((event.clientY - 86) / 11.5);\n\n    if (Model.board[mouseYPos][mouseXPos] === 0) {\n      Model.board[mouseYPos][mouseXPos] = 1;\n    } else if (Model.board[mouseYPos][mouseXPos] === 1) {\n      Model.board[mouseYPos][mouseXPos] = 0;\n    }\n  });\n\n  //use this portion to draw the board\n  const boardUpdater = () => {\n    canvasContext.font = '20pt Arial';\n    //this is to draw the board on the canvase\n    canvasContext.fillStyle = 'gray';\n    canvasContext.fillRect(\n      10,\n      10,\n      boardSize * 11.5 + 1.5,\n      boardSize * 11.5 + 1.5\n    );\n    canvasContext.fillStyle = 'gray';\n\n    Model.board.forEach((row, rowIndex) => {\n      row.forEach((grid, gridIndex) => {\n        let gridcolor;\n        if (grid === 0) {\n          gridcolor = 'white';\n        } else {\n          gridcolor = 'cyan';\n        }\n        canvasContext.fillStyle = gridcolor;\n        canvasContext.fillRect(\n          11.5 * (gridIndex + 1),\n          11.5 * (rowIndex + 1),\n          10,\n          10\n        );\n      });\n    });\n  };\n\n  const gamePauser = inputKey => {\n    if (inputKey === 80) {\n      Model.gamePaused = true;\n    }\n    if (inputKey === 82) {\n      Model.gamePaused = false;\n    }\n  };\n\n  const render = time => {\n    requestAnimationFrame(render);\n    boardUpdater();\n    gamePauser(inputKey);\n  };\n\n  bindEventListeners();\n  render();\n};\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport './Home.scss';\nimport pong from '../../img/3d-pong.png';\nimport planet from '../../img/three.png';\nimport conway from '../../img/conway.png';\nimport excursion from '../../img/excursion.png';\n\nclass Home extends Component {\n  render() {\n    return (\n      <div className=\"placement\">\n        <div className=\"grid-container\">\n          <div className=\"home-nav\">\n            <nav>\n              <a>Profile</a>\n              <a>Experiences</a>\n              <a>Languages</a>\n              <a>Projects</a>\n              <a>Contact</a>\n            </nav>\n          </div>\n\n          <div className=\"main\">\n            <div className=\"filter\" />\n            <div className=\"title\">\n              <h1>Timothy Li</h1>\n              <h2>Interactive Resume</h2>\n            </div>\n            <div className=\"cover\" />\n            <div className=\"profile\">\n              <div className=\"profile-title\">\n                <h1>Profile</h1>\n                <h2>Full-Stack Web Developer</h2>\n              </div>\n              <div className=\"profile-about\">\n                <h3>About me</h3>\n                <p>\n                  Former salesman and a finance guy. I started my journey in web\n                  design after experiencing the joy of self expression through\n                  website design and engineering. I am especially passionate in\n                  3D design and UI design for the web.\n                </p>\n              </div>\n              <img\n                src=\"https://scontent-sea1-1.xx.fbcdn.net/v/t1.0-9/52033748_10219280971237539_1245972808593309696_o.jpg?_nc_cat=102&_nc_ht=scontent-sea1-1.xx&oh=0e6fdfe31a63cd4f8aa0520f8cf1732b&oe=5D156E46\"\n                alt=\"Timothy Li's Profile\"\n              />\n              <div className=\"profile-details\">\n                <h3>Details</h3>\n                <ul>\n                  <li>\n                    Name: <br /> Timothy Li\n                  </li>\n                  <li>\n                    Title: <br /> Full-Stack Developer\n                  </li>\n                  <li>\n                    Location: <br /> Greater Seattle, Washington\n                  </li>\n                </ul>\n              </div>\n            </div>\n            <div className=\"experiences\">\n              <div className=\"experiences-title\">\n                <h1>Experiences</h1>\n                <h2>\n                  “Good judgment comes from experience, and experience comes\n                  from bad judgment.” <br /> ― Rita Mae Brown, Alma Mater\n                </h2>\n              </div>\n              <div className=\"experiences-careers\">\n                <h3>Careers</h3>\n                <h4>Sovereign Wealth Fund Institute- Contractor</h4>\n                <h5>January 2019-March 2019</h5>\n\n                <p>\n                  Developed a full-stack CMS site to the company’s event site.\n                  Used frameworks such as React, and Express to help reached the\n                  client’s need for their upcoming event. Developed a Mobile app\n                  for an ongoing new project for the company. Used React-Native\n                  as the primary tool for development.\n                </p>\n\n                <h4>Fly-Sorter- Contractor</h4>\n                <h5>December 2019-December 2019</h5>\n\n                <p>\n                  We developed a full-stack IMS with Amazon Serverless Database,\n                  Lambda Functions, SQL, and React. We integrated another team’s\n                  code base and reverse engineered their code base so that the\n                  interface better suited our clients.\n                </p>\n\n                <h4>Farmers Insurance- Recruiter/Agency Consultant</h4>\n                <h5>January 2018 - June 2018</h5>\n\n                <p>\n                  Invited and helped candidates determine their potential in the\n                  insurance industry. Helped with sales at a local insurance\n                  branch when they had a sudden need for salesman.\n                </p>\n\n                <h4>Enterprise Rent-a-Car- Management Assistant</h4>\n                <h5>August 2016 - January 2018</h5>\n\n                <p>\n                  Helped managed a local branch and managed fleet logistics of\n                  the branch. Mentored some of the top salesmans in our region\n                  and was ranked 1st when I left.\n                </p>\n              </div>\n              <div className=\"experiences-education\">\n                <h3>Educations</h3>\n                <h4>Code Fellows</h4>\n                <h5>Seattle, Wa</h5>\n                <p>\n                  Certificate - Advanced Software Development in Full-Stack\n                  JavaScript\n                </p>\n                <h4>University of Washington</h4>\n                <h5>Bothell, Wa</h5>\n                <p>B.S - Business Admin Finance </p>\n              </div>\n            </div>\n            <div className=\"languages\">\n              <h1>Languages and Tools</h1>\n              <h2>\n                \"Anyone who stops learning is old, whether at twenty or eighty.”\n                <br />\n                -Henry Ford\n              </h2>\n              <ul>\n                <li>JavaScript</li>\n                <li>Java-Beginner</li>\n                <li>NodeJS</li>\n                <li>Express</li>\n                <li>React</li>\n                <li>Redux</li>\n                <li>MongoDB</li>\n                <li>MySQL</li>\n                <li>Amazon Web Service</li>\n                <li>Amazon Azure</li>\n                <li>Serverless Cloud</li>\n                <li>WebGL- ThreeJS</li>\n              </ul>\n            </div>\n            <div className=\"projects\">\n              <h1>Projects</h1>\n              <h2>\n                “You can do anything you set your mind to.” <br /> - Benjamin\n                Franklin\n              </h2>\n              <div className=\"image-list\">\n                <Link to=\"/projects\">\n                  <img src={planet} alt=\"planet with 3js\" />\n                  <h4>Planet Orbit</h4>\n                </Link>\n                <Link to=\"/projects/game\">\n                  <img src={pong} alt=\"pong with 3js\" />\n                  <h4>3D Pong</h4>\n                </Link>\n\n                <Link to=\"/projects/conway\">\n                  <img src={conway} alt=\"conway with canvas\" />\n                  <h4>Conway's Game of Life</h4>\n                </Link>\n                <div className=\"animal\">\n                  <a href=\"http://www.animal-excursion.fun/\">\n                    <img\n                      src={excursion}\n                      alt=\"animal-excursion\"\n                      href=\"http://www.animal-excursion.fun/\"\n                    />\n\n                    <h4>Animal Excursion</h4>\n                  </a>\n                </div>\n              </div>\n            </div>\n            <div className=\"contact\">\n              <h1>Contact</h1>\n              <h2>\n                “If I had asked people what they wanted, they would have said\n                faster horses. ”\n                <br />- Henry Ford\n              </h2>\n              <a href=\"https://www.linkedin.com/in/timothy-li-052774107/\">\n                LinkedIn\n              </a>\n              <a href=\"https://github.com/Timinis\">GitHub</a>\n              <div className=\"contact-phone\">\n                <h3>Phone Number</h3>\n                <h4>425-615-4810</h4>\n              </div>\n              <div className=\"contact-email\">\n                <h3>Email Address</h3>\n                <h4>litimc3@gmail.com</h4>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Home;\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport './Nav.scss';\n\nclass NavBar extends Component {\n  render() {\n    return (\n      <nav className=\"project-nav\">\n        <Link to=\"/\">Home</Link>\n        <Link to=\"/projects\">ThreeJS</Link>\n        <Link to=\"/projects/game\">Game</Link>\n        <Link to=\"/projects/map\">Home Town</Link>\n        <Link to=\"/projects/conway\">Cellular Simulation</Link>\n      </nav>\n    );\n  }\n}\n\nexport default NavBar;\n","import * as THREE from 'three';\n\nexport default canvas => {\n  //* Scene Section *//\n\n  let scene = new THREE.Scene();\n  let circle = new THREE.Object3D();\n  let skelet = new THREE.Object3D();\n  let particle = new THREE.Object3D();\n  scene.add(circle);\n  scene.add(skelet);\n  scene.add(particle);\n\n  let fieldWidth = window.innerWidth;\n  let fieldHeight = window.innerHeight;\n\n  //* Camera Section *//\n\n  let cameraAngle = 40;\n  let cameraAspect = fieldWidth / fieldHeight;\n  let cameraNear = 0.1;\n  let cameraFar = 100000;\n\n  let camera = new THREE.PerspectiveCamera(\n    cameraAngle,\n    cameraAspect,\n    cameraNear,\n    cameraFar\n  );\n\n  camera.position.z = 100;\n\n  let lights = [];\n  lights[0] = new THREE.DirectionalLight(0xffffff, 1);\n  lights[0].position.set(1, 0, 0);\n  lights[1] = new THREE.DirectionalLight(0x11e8bb, 1);\n  lights[1].position.set(0.75, 1, 0.5);\n  lights[2] = new THREE.DirectionalLight(0x8200c9, 1);\n  lights[2].position.set(-0.75, -1, 0.5);\n  scene.add(lights[0]);\n  scene.add(lights[1]);\n  scene.add(lights[2]);\n\n  //* Renderer Section *//\n  let renderer = new THREE.WebGLRenderer({ canvas: canvas, alpha: true });\n  renderer.autoClear = false;\n  renderer.setClearColor(0xffffff, 0);\n  renderer.setPixelRatio(window.devicePixelRatio);\n  renderer.setSize(window.innerWidth, window.innerHeight);\n\n  renderer.setSize(fieldWidth, fieldHeight);\n  const onWindowResize = () => {\n    let width = fieldWidth;\n    let height = fieldHeight;\n    renderer.setSize(width, height);\n    camera.aspect = width / height;\n    camera.updateProjectionMatrix();\n  };\n\n  let OctahedronBufferGeometry = new THREE.OctahedronBufferGeometry(10);\n\n  let octahedronArray = [];\n  let geom = new THREE.IcosahedronGeometry(7, 1);\n  let geom2 = new THREE.IcosahedronGeometry(15, 1);\n  let planet = new THREE.Mesh(\n    geom,\n    new THREE.MeshPhongMaterial({\n      color: 0xffffff,\n      flatShading: true\n    })\n  );\n  planet.scale.x = planet.scale.y = planet.scale.z = 2;\n\n  let planet2 = new THREE.Mesh(\n    geom2,\n    new THREE.MeshPhongMaterial({\n      color: 0xffffff,\n      wireframe: true,\n      side: THREE.DoubleSide\n    })\n  );\n  planet2.scale.x = planet2.scale.y = planet2.scale.z = 1.2;\n\n  circle.add(planet);\n  skelet.add(planet2);\n\n  for (let i = 0; i < 1000; i++) {\n    let octahedron = new THREE.Mesh(\n      OctahedronBufferGeometry,\n      new THREE.MeshPhongMaterial({\n        color: 0xffffff,\n        flatShading: true\n      })\n    );\n    octahedron.position.x = Math.random() * 800 - 400;\n    octahedron.position.y = Math.random() * 800 - 400;\n    octahedron.position.z = Math.random() * 800 - 400;\n    octahedron.rotation.x = Math.random() * 2 * Math.PI;\n    octahedron.rotation.y = Math.random() * 2 * Math.PI;\n    octahedron.rotation.z = Math.random() * 2 * Math.PI;\n    octahedron.scale.x = Math.random() * 0.2;\n    octahedron.scale.y = Math.random() * 0.2;\n    octahedron.scale.z = Math.random() * 0.2;\n    octahedronArray.push(octahedron);\n  }\n\n  octahedronArray.forEach(element => particle.add(element));\n\n  const update = () => {\n    renderer.render(scene, camera);\n\n    particle.rotation.x += 0.0;\n    particle.rotation.y -= 0.004;\n    circle.rotation.x -= 0.002;\n    circle.rotation.y -= 0.003;\n    skelet.rotation.x -= 0.001;\n    skelet.rotation.y += 0.002;\n\n    octahedronArray.forEach(element => {\n      element.rotation.x -= 0.01;\n      element.rotation.y -= 0.01;\n    });\n  };\n\n  const drawScene = () => {};\n\n  return { onWindowResize, update, drawScene };\n};\n","import React, { Component } from 'react';\nimport backgroundRender from '../../../background/backgroundRender';\nimport './ThreeBackground.scss';\nclass ThreeBackground extends Component {\n  componentDidMount() {\n    const canvas = document.getElementById('background');\n    backgroundRender(canvas);\n  }\n\n  render() {\n    return (\n      <div className=\"background\">\n        <canvas id=\"background\" />\n      </div>\n    );\n  }\n}\n\nexport default ThreeBackground;\n","import BackgroundManager from './backgroundManager.js';\n\nexport default canvasComponent => {\n  const backgroundManager = new BackgroundManager(canvasComponent);\n\n  const bindEventListeners = () => {\n    window.onresize = resizeCanvas;\n    resizeCanvas();\n  };\n\n  const resizeCanvas = () => {\n    canvasComponent.style.width = `100%`;\n    canvasComponent.style.height = `100%`;\n    canvasComponent.width = canvasComponent.offsetWidth;\n    canvasComponent.height = canvasComponent.offsetHeight;\n    backgroundManager.onWindowResize();\n  };\n\n  const render = time => {\n    requestAnimationFrame(render);\n    backgroundManager.update();\n    backgroundManager.drawScene();\n  };\n\n  bindEventListeners();\n  render();\n};\n","import React, { Component } from 'react';\nimport NavBar from '../Nav/Nav.js';\nimport ThreeBackground from '../ThreeBackground/ThreeBackground.js';\nimport './Main.scss';\n\nclass Home extends Component {\n  render() {\n    return (\n      <div>\n        <NavBar />\n        <ThreeBackground />\n        {/* <div className=\"content\">\n          <content>\n            <p>\n              Hello, welcome to Timothy Li's personal site to showcase my\n              passion in UI and rendering work. I am a full-stack developer that\n              have built many different type of applications.\n            </p>\n            <p>\n              Some of my projects were a NDA Inventory Management Application\n              for a start-up in Seattle, a CMS site for a media company located\n              in Lynnwood.\n            </p>\n            <p>\n              I am especially passionate in 3D design and UI design for the web.\n              The emergence of the Internet has shaped the foundation of reality\n              itself and I believe that through visual designs and\n              interactivity, I can also shape the way we interact with others.\n              3D has always been a passion for me and which is why I decide to\n              generate this background to enhance the experience of visiting my\n              site. The navigation bar on the top showcases my projects and my\n              passion for interactive UI designs, feel free to check them out.\n            </p>\n          </content>\n        </div> */}\n      </div>\n    );\n  }\n}\n\nexport default Home;\n","import * as THREE from 'three';\n\nexport default canvas => {\n  //* Scene Section *//\n\n  let scene = new THREE.Scene();\n  scene.background = new THREE.Color(0xf0f0f0);\n\n  let fieldWidth = window.innerWidth;\n  let fieldHeight = window.innerHeight;\n  let gameStarted = false;\n\n  //* Camera Section *//\n\n  let cameraAngle = 40;\n  let cameraAspect = fieldWidth / fieldHeight;\n  let cameraNear = 0.1;\n  let cameraFar = 100000;\n\n  let camera = new THREE.PerspectiveCamera(\n    cameraAngle,\n    cameraAspect,\n    cameraNear,\n    cameraFar\n  );\n\n  camera.position.z = 70;\n  camera.position.x = -620;\n  camera.lookAt(900, 0, 0);\n  camera.rotation.x = Math.PI / 2;\n\n  //* Renderer Section *//\n  let renderer = new THREE.WebGLRenderer({ canvas: canvas });\n\n  renderer.setSize(fieldWidth, fieldHeight);\n  const onWindowResize = () => {\n    let width = fieldWidth;\n    let height = fieldHeight;\n    renderer.setSize(width, height);\n    camera.aspect = width / height;\n    camera.updateProjectionMatrix();\n  };\n\n  //* Parts in Game *//\n\n  //Buttons for mode\n\n  let loader = new THREE.FontLoader();\n  loader.load(`./helvetiker_regular.typeface.json`, response => {\n    console.log(response);\n  });\n\n  // let textGeometry = new THREE.TextGeometry('Hello three.js!', {\n  //   font: font,\n  //   size: 80\n  // });\n\n  // let textMaterial = new THREE.MeshLambertMaterial({ color: 0x888888 });\n\n  // let singlePlayer = new THREE.Mesh(textGeometry, textMaterial);\n  // singlePlayer.position.z = 100;\n\n  // scene.add(singlePlayer);\n\n  //Ball in Game\n\n  let ballRadius = 7;\n  let ballSegments = 40;\n  let ballRings = 40;\n\n  let ballGeometry = new THREE.SphereGeometry(\n    ballRadius,\n    ballSegments,\n    ballRings\n  );\n  let ballMaterial = new THREE.MeshStandardMaterial({\n    color: 0x9effff\n  });\n\n  let ball = new THREE.Mesh(ballGeometry, ballMaterial);\n\n  ball.position.z = ballRadius;\n\n  //Board in game\n\n  let boardWidth = fieldWidth * 0.4;\n  let boardHeight = fieldHeight * 0.3;\n\n  let boardQuality = 10;\n  let boardMaterial = new THREE.MeshLambertMaterial({ color: 0x888888 });\n  let boardGeometry = new THREE.PlaneGeometry(\n    boardWidth,\n    boardHeight,\n    boardQuality,\n    boardQuality\n  );\n  let board = new THREE.Mesh(boardGeometry, boardMaterial);\n\n  scene.add(board);\n\n  // Light in game\n  let pointLight = new THREE.PointLight(0xf8d898);\n\n  pointLight.position.x = -500;\n  pointLight.position.y = 500;\n  pointLight.position.z = 1000;\n  pointLight.intensity = 3;\n  pointLight.distance = 10000;\n\n  scene.add(pointLight);\n\n  let spotLight = new THREE.SpotLight(0xf8d898);\n  spotLight.position.set(0, 0, 100);\n  spotLight.intensity = 0.5;\n  spotLight.castShadow = true;\n  scene.add(spotLight);\n\n  //Paddles in game\n  let paddleWidth = 10;\n  let paddleHeight = 50;\n  let paddleDepth = 15;\n  let paddleQuality = 1;\n\n  let paddleGeometry = new THREE.CubeGeometry(\n    paddleWidth,\n    paddleHeight,\n    paddleDepth,\n    paddleQuality,\n    paddleQuality,\n    paddleQuality\n  );\n\n  let paddle1Material = new THREE.MeshLambertMaterial({ color: 0x0000ff });\n  let paddle2Material = new THREE.MeshLambertMaterial({ color: 0xff0000 });\n\n  let paddle1 = new THREE.Mesh(paddleGeometry, paddle1Material);\n  let paddle2 = new THREE.Mesh(paddleGeometry, paddle2Material);\n\n  let paddle1UpperRange = paddle1.position.y + paddleHeight / 2;\n  let paddle1LowerRange = paddle1.position.y - paddleHeight / 2;\n\n  paddle1.position.x = -boardWidth / 2 + paddleWidth;\n  paddle2.position.x = boardWidth / 2 - paddleWidth;\n  paddle1.position.z = paddleDepth - 8;\n  paddle2.position.z = paddleDepth - 8;\n\n  scene.add(paddle1);\n  scene.add(paddle2);\n\n  //* Background Items *//\n\n  //Pillar\n\n  let pillarGeometry = new THREE.CylinderGeometry(20, 20, 400, 32);\n  let pillarMaterial = new THREE.MeshLambertMaterial({ color: 0x3499a6 });\n  let pillar1 = new THREE.Mesh(pillarGeometry, pillarMaterial);\n  let pillar2 = new THREE.Mesh(pillarGeometry, pillarMaterial);\n  let pillar3 = new THREE.Mesh(pillarGeometry, pillarMaterial);\n  let pillar4 = new THREE.Mesh(pillarGeometry, pillarMaterial);\n  let pillar5 = new THREE.Mesh(pillarGeometry, pillarMaterial);\n  let pillar6 = new THREE.Mesh(pillarGeometry, pillarMaterial);\n\n  scene.add(pillar1);\n  scene.add(pillar2);\n  scene.add(pillar3);\n  scene.add(pillar4);\n  scene.add(pillar5);\n  scene.add(pillar6);\n\n  pillar1.rotation.x = Math.PI / 2;\n  pillar1.position.y = boardHeight / 2 + 100;\n  pillar2.rotation.x = Math.PI / 2;\n  pillar2.position.y = -boardHeight / 2 - 100;\n  pillar3.rotation.x = Math.PI / 2;\n  pillar3.position.y = boardHeight / 2 + 100;\n  pillar3.position.x = boardWidth / 2 + 100;\n  pillar4.rotation.x = Math.PI / 2;\n  pillar4.position.y = -boardHeight / 2 - 100;\n  pillar4.position.x = boardWidth / 2 + 100;\n\n  pillar5.rotation.x = Math.PI / 2;\n  pillar5.position.y = boardHeight / 2 + 100;\n  pillar5.position.x = -boardWidth / 2 - 100;\n\n  pillar6.rotation.x = Math.PI / 2;\n  pillar6.position.y = -boardHeight / 2 - 100;\n  pillar6.position.x = -boardWidth / 2 - 100;\n\n  //Table\n\n  let tableGeometry = new THREE.CubeGeometry(\n    boardWidth + 30,\n    boardHeight + 30,\n    50\n  );\n\n  let tableMaterial = new THREE.MeshLambertMaterial({ color: 0x2e2e2e });\n\n  let table = new THREE.Mesh(tableGeometry, tableMaterial);\n\n  scene.add(table);\n\n  table.position.z = -26;\n\n  let floorGeometry = new THREE.PlaneGeometry(1500, 1200);\n  let floorMaterial = new THREE.MeshBasicMaterial({ color: 0xfaedc0 });\n\n  let floor = new THREE.Mesh(floorGeometry, floorMaterial);\n  scene.add(floor);\n  floor.position.z = -200;\n\n  //* Score Keeper *//\n\n  let scoreKeeper = document.createElement('canvas');\n\n  let scoreContext = scoreKeeper.getContext('2d');\n\n  let player1Score = 0;\n  let player2Score = 0;\n  let downCounter;\n  let countDownBool = false;\n  let playerNames = `Player 1   Player 2`;\n\n  const countDown = () => {\n    downCounter = 3;\n    setTimeout(() => {\n      downCounter -= 1;\n    }, 1000);\n    setTimeout(() => {\n      downCounter -= 1;\n    }, 2000);\n    setTimeout(() => {\n      downCounter -= 1;\n    }, 3000);\n    setTimeout(() => {\n      downCounter = playerNames;\n    }, 3100);\n    countDownBool = false;\n  };\n\n  const scoreUpdater = () => {\n    scoreContext.font = '20pt Arial';\n\n    scoreContext.fillStyle = 'white';\n    scoreContext.fillRect(\n      10,\n      10,\n      scoreKeeper.width - 20,\n      scoreKeeper.height - 20\n    );\n    scoreContext.fillStyle = 'black';\n    scoreContext.textAlign = 'center';\n    scoreContext.textBaseline = 'middle';\n    if (!gameStarted) {\n      scoreContext.fillText(\n        'Press ENTER to Start',\n        scoreKeeper.width / 2,\n        scoreKeeper.height / 2 - 30\n      );\n    }\n    if (gameStarted) {\n      scoreContext.fillText(\n        downCounter,\n        scoreKeeper.width / 2,\n        scoreKeeper.height / 2 - 30\n      );\n      scoreContext.fillText(\n        `${player1Score}  |  ${player2Score}`,\n        scoreKeeper.width / 2,\n        scoreKeeper.height / 2\n      );\n    }\n  };\n\n  let scoreBoardWidth = 200;\n  let scoreBoardHeight = 100;\n\n  let scoreBoardGeometry = new THREE.PlaneGeometry(\n    scoreBoardWidth,\n    scoreBoardHeight\n  );\n\n  let scoreTexture = new THREE.Texture(scoreKeeper);\n  scoreTexture.minFilter = THREE.LinearFilter;\n\n  let scoreBoardMaterial = new THREE.MeshBasicMaterial({\n    map: scoreTexture\n  });\n  let scoreBoard = new THREE.Mesh(scoreBoardGeometry, scoreBoardMaterial);\n\n  scene.add(scoreBoard);\n  scoreBoard.position.z = 200;\n  scoreBoard.position.x = boardWidth / 2;\n\n  scoreBoard.rotation.y = -Math.PI / 2;\n  scoreBoard.rotation.x = Math.PI / 2;\n\n  console.log(scene.children);\n\n  //* Game Physics *//\n\n  let ballXDirection = 1;\n  let ballYDirection = 1;\n  let ballSpeed = 3;\n  let startGame = () => {\n    if (!gameStarted) {\n      setTimeout(() => {\n        scene.add(ball);\n        ball.position.x = 0;\n        ball.position.y = 0;\n      }, 3000);\n      countDownBool = true;\n    }\n    gameStarted = true;\n  };\n\n  const ballPhysics = () => {\n    ball.position.x += ballXDirection * ballSpeed;\n    ball.position.y += ballYDirection * ballSpeed;\n\n    if (ball.position.y >= boardHeight / 2 - ballRadius) {\n      ballYDirection = -ballYDirection;\n    }\n\n    if (ball.position.y <= -boardHeight / 2 + ballRadius) {\n      ballYDirection = -ballYDirection;\n    }\n    if (ball.position.x >= boardWidth / 2) {\n      ballXDirection = -ballXDirection;\n    }\n\n    if (\n      ball.position.x <= -boardWidth / 2 + paddleWidth + ballRadius &&\n      ball.position.y < paddle1UpperRange &&\n      ball.position.y > paddle1LowerRange\n    ) {\n      ballXDirection = -ballXDirection;\n    }\n\n    if (ball.position.x < -boardWidth / 2 + paddleWidth) {\n      player2Score += 1;\n      ball.position.x = 0;\n      ball.position.y = 0;\n      ballXDirection = 0;\n      ballYDirection = 0;\n      setTimeout(ballDelayStart, 3000);\n      countDownBool = true;\n    }\n  };\n  const ballDelayStart = () => {\n    ballXDirection = 1;\n    ballYDirection = 1;\n  };\n\n  const update = inputKey => {\n    scoreUpdater();\n    scoreTexture.needsUpdate = true;\n\n    if (inputKey === 13) {\n      startGame();\n    }\n    if (gameStarted) {\n      ballPhysics();\n      if (countDownBool) {\n        countDown();\n      }\n    }\n    if (\n      paddle1UpperRange <= boardHeight / 2 - ballRadius &&\n      paddle1LowerRange >= -boardHeight / 2 + ballRadius\n    ) {\n      if (inputKey === 37) {\n        paddle1.position.y += 4;\n        paddle1UpperRange += 4;\n        paddle1LowerRange += 4;\n      }\n      if (inputKey === 39) {\n        paddle1.position.y -= 4;\n        paddle1UpperRange -= 4;\n        paddle1LowerRange -= 4;\n      }\n    } else if (paddle1UpperRange > boardHeight / 2 - ballRadius) {\n      if (inputKey === 39) {\n        paddle1.position.y -= 4;\n        paddle1UpperRange -= 4;\n        paddle1LowerRange -= 4;\n      }\n    } else if (paddle1LowerRange < -boardHeight / 2 + ballRadius) {\n      if (inputKey === 37) {\n        paddle1.position.y += 4;\n        paddle1UpperRange += 4;\n        paddle1LowerRange += 4;\n      }\n    }\n  };\n\n  const drawScene = () => {\n    renderer.render(scene, camera);\n  };\n\n  return { onWindowResize, update, drawScene };\n};\n","import React, { Component } from 'react';\nimport NavBar from '../Nav/Nav.js';\nimport gameRender from '../../../game/gameRender.js';\n\nclass GameScreen extends Component {\n  componentDidMount() {\n    const canvas = document.getElementById('game');\n    gameRender(canvas);\n  }\n\n  render() {\n    return (\n      <div>\n        <NavBar />\n        <canvas id=\"game\" />\n      </div>\n    );\n  }\n}\n\nexport default GameScreen;\n","import GameManager from './GameManager.js';\n\nexport default canvasComponent => {\n  const gameManager = new GameManager(canvasComponent);\n\n  const bindEventListeners = () => {\n    window.onresize = resizeCanvas;\n    resizeCanvas();\n  };\n\n  const resizeCanvas = () => {\n    canvasComponent.style.width = `100%`;\n    canvasComponent.style.height = `100%`;\n    canvasComponent.width = canvasComponent.offsetWidth;\n    canvasComponent.height = canvasComponent.offsetHeight;\n    gameManager.onWindowResize();\n  };\n\n  let inputKey;\n\n  window.addEventListener('keydown', event => {\n    inputKey = event.keyCode;\n  });\n\n  window.addEventListener('keyup', event => {\n    inputKey = undefined;\n  });\n\n  const render = time => {\n    requestAnimationFrame(render);\n    gameManager.update(inputKey);\n    gameManager.drawScene();\n  };\n\n  bindEventListeners();\n  render();\n};\n","import React, { Component } from 'react';\nimport NavBar from '../Nav/Nav.js';\nimport * as Mapbox from 'mapbox-gl';\n\nclass Map extends Component {\n  componentDidMount() {\n    Mapbox.accessToken =\n      'pk.eyJ1IjoidGltbGkxMjM0IiwiYSI6ImNqc3czZHM4ajBkbTkzeXFqemY1c3dkdTIifQ.bcwTGk-K8GhFbS4K6Wmbgw';\n    let map = new Mapbox.Map({\n      container: this.mapContainer,\n      style: 'mapbox://styles/mapbox/streets-v9',\n      center: [120.30529657298644, 22.663165013386205],\n      zoom: 15.99,\n      pitch: 40,\n      bearing: 0\n    });\n    map.on('load', function() {\n      // Insert the layer beneath any symbol layer.\n      var layers = map.getStyle().layers;\n\n      var labelLayerId;\n      for (var i = 0; i < layers.length; i++) {\n        if (layers[i].type === 'symbol' && layers[i].layout['text-field']) {\n          labelLayerId = layers[i].id;\n          break;\n        }\n      }\n\n      map.addLayer(\n        {\n          id: '3d-buildings',\n          source: 'composite',\n          'source-layer': 'building',\n          filter: ['==', 'extrude', 'true'],\n          type: 'fill-extrusion',\n          minzoom: 15,\n          paint: {\n            'fill-extrusion-color': '#aaa',\n\n            // use an 'interpolate' expression to add a smooth transition effect to the\n            // buildings as the user zooms in\n            'fill-extrusion-height': [\n              'interpolate',\n              ['linear'],\n              ['zoom'],\n              15,\n              0,\n              15.05,\n              ['get', 'height']\n            ],\n            'fill-extrusion-base': [\n              'interpolate',\n              ['linear'],\n              ['zoom'],\n              15,\n              0,\n              15.05,\n              ['get', 'min_height']\n            ],\n            'fill-extrusion-opacity': 0.6\n          }\n        },\n        labelLayerId\n      );\n    });\n\n    this.map = map;\n  }\n\n  componentWillUnmount() {\n    this.map.remove();\n  }\n\n  render() {\n    const style = {\n      position: 'absolute',\n      top: '0',\n      bottom: 0,\n      width: '100%',\n      zIndex: -1\n    };\n\n    return (\n      <div>\n        <NavBar />\n        <div style={style} ref={el => (this.mapContainer = el)} />\n      </div>\n    );\n  }\n}\n\nexport default Map;\n","import React, { Component } from 'react';\nimport NavBar from '../Nav/Nav.js';\nimport conwayRenderer from '../../../conway/conwayRenderer.js';\nimport './ConwayScreen.scss';\n\nclass GameScreen extends Component {\n  componentDidMount = () => {\n    const canvas = document.getElementById('conway');\n    conwayRenderer(canvas);\n  };\n\n  render() {\n    return (\n      <div>\n        <NavBar />\n        <canvas id=\"conway\" />\n        <di class=\"text\">\n          <h2>Introduction to the Conway's Game of Life</h2>\n          <p>\n            Conway's Game of Life is a 'cellular automaton' game that was\n            invented by Cambridge mathetician John Conway. It consists of a\n            collection of cells which, based on a few mathematical rules, can\n            live, die or multiply. Depending on the initial conditions, the\n            cells form various patterns throughout the course of the game. The\n            basic survival of each cells is dependent on these conditions.\n          </p>\n          <ol>\n            <li>\n              Any live cell with fewer than two live neighbours dies, as if by\n              underpopulation.\n            </li>\n            <li>\n              Any live cell with two or three live neighbours lives on to the\n              next generation.\n            </li>\n            <li>\n              Any dead cell with exactly three live neighbours becomes a live\n              cell, as if by reproduction.\n            </li>\n            <li>\n              Any live cell with more than three live neighbours dies, as if by\n              overpopulation.\n            </li>\n          </ol>\n          <h2>Tutorial to the Game</h2>\n          <p>\n            Press on the grids to make the cells \"alive\". Press R to\n            start/resume the game. Press P to pause the game so that the board\n            can be re-edited again. Then watch to watch the simulation happen.\n          </p>\n        </di>\n      </div>\n    );\n  }\n}\n\nexport default GameScreen;\n","import React, { Component } from 'react';\nimport { HashRouter, Route } from 'react-router-dom';\nimport Home from './Home/Home.js';\nimport Main from './Projects/Main/Main.js';\nimport GameScreen from './Projects/GameScreen/GameScreen.js';\nimport Map from './Projects/Map/Map.js';\nimport Conway from './Projects/ConwayScreen/ConwayScreen.js';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      // What kind of inital state to we need?\n    };\n  }\n\n  render() {\n    return (\n      <HashRouter>\n        <div>\n          <Route path=\"/\" exact component={Home} />\n          <Route path=\"/projects\" exact component={Main} />\n          <Route path=\"/projects/game\" exact component={GameScreen} />\n          <Route path=\"/projects/map\" exact component={Map} />\n          <Route path=\"/projects/conway\" exact component={Conway} />\n        </div>\n      </HashRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\nimport './reset.scss';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}